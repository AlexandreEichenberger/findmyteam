# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-14 16:29
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import match.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invitor_username', models.CharField(max_length=200)),
                ('prospective_username', models.CharField(max_length=200)),
                ('date_invited', models.DateField(auto_now_add=True)),
                ('date_response', models.DateField(blank=True, null=True)),
                ('type', models.CharField(choices=[('P', 'person to team'), ('T', 'team to person'), ('H', 'new team to mentor team'), ('M', 'mentor team to new team')], default='P', max_length=1)),
                ('status', models.CharField(choices=[('I', 'initiated'), ('A', 'accepted'), ('D', 'declined'), ('O', 'declined that has now expired'), ('E', 'expired')], default='I', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='', max_length=200)),
                ('guardian_name', models.CharField(help_text="Enter the name of the child's guardian.", max_length=200)),
                ('child_name', models.CharField(help_text='Enter the name of the child that you are looking a team for.', max_length=200)),
                ('child_interest', models.TextField(help_text="Enter your child's interest and relevant experience. Text should read as a paragraph.", max_length=1000)),
                ('school_district_name', models.CharField(help_text="Enter the name of your child's school district. Some school-based teams restricts membership to children in the district.", max_length=200)),
                ('years_of_FIRST_experience', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of seasons that your child has participated in FIRST programs.')),
                ('zip_code', models.PositiveSmallIntegerField(help_text='5 digit ZIP code of where you live.', validators=[match.models.validate_zip_code])),
                ('town_name', models.CharField(blank=True, default='', max_length=50)),
                ('state_name', models.CharField(blank=True, default='', max_length=2)),
                ('latitude', models.FloatField(blank=True, default=0.0)),
                ('longitude', models.FloatField(blank=True, default=0.0)),
                ('interested_in_jFLL', models.BooleanField(default=False, help_text='Select if your child is interested in joining a Junior FIRST Lego League (jFLL) team.')),
                ('interested_in_FLL', models.BooleanField(default=False, help_text='Select if your child is interested in joining an FIRST Lego League (FLL) team.')),
                ('interested_in_FTC', models.BooleanField(default=False, help_text='Select if your child is interested in joining an FIRST Tech Challenge (FTC) team.')),
                ('interested_in_FRC', models.BooleanField(default=False, help_text='Select if your child is interested in joining an FIRST Robotics Competition (FRC) team.')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('-', '-'), ('P', 'Account for a person'), ('T', 'Account for a team'), ('O', 'Account for a charitable organization')], default='-', max_length=1)),
                ('specific_profile_id', models.IntegerField(default=-1)),
                ('first_update', models.DateField(auto_now_add=True)),
                ('last_update', models.DateField(auto_now=True)),
                ('update_count', models.PositiveIntegerField(default=0)),
                ('looking_request_count', models.PositiveIntegerField(default=0)),
                ('requested_count', models.PositiveIntegerField(default=0)),
                ('accepted_count', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_program', models.CharField(choices=[('-', '-'), ('J', 'jFLL'), ('L', 'FLL'), ('T', 'FTC'), ('R', 'FRC')], default='-', help_text='Enter the FIRST program of your team.', max_length=1, validators=[match.models.validate_first_program])),
                ('username', models.CharField(default='', max_length=200)),
                ('team_name', models.CharField(help_text='Enter the name of your team.', max_length=200)),
                ('team_number', models.IntegerField(blank=True, help_text='Enter the team number of your team. Prospective teams, established jFLL, or established FLL teams may leave the field blank.', null=True)),
                ('team_type', models.CharField(choices=[('-', '-'), ('S', 'school based'), ('H', '4H club'), ('B', 'boy scout'), ('G', 'girl scout'), ('O', 'other')], default='-', help_text='Enter the type of association that your team is part of.  School-based teams typically restrict membership to children living in the school district.', max_length=1, validators=[match.models.validate_team_type])),
                ('school_district_name', models.CharField(blank=True, help_text='Enter the name of your school district if your team is a school-based team. Otherwise, leave the field blank.', max_length=200, null=True)),
                ('year_founded', models.PositiveSmallIntegerField(blank=True, help_text='Enter the year that your team was founded. Leave field blank for prospective teams.', null=True)),
                ('description', models.TextField(help_text="Enter a brief team's description and include your team's objectives. Text shoud read as a paragraph.", max_length=2000)),
                ('achievement', models.TextField(help_text='Describe your recent achievements. Text should read as a paragraph.', max_length=1000)),
                ('web_site', models.URLField(blank=True, help_text='Enter the URL of your team online presence.', null=True)),
                ('zip_code', models.PositiveSmallIntegerField(help_text='5 digit ZIP code of where you meet.', validators=[match.models.validate_zip_code])),
                ('town_name', models.CharField(blank=True, default='', max_length=50)),
                ('state_name', models.CharField(blank=True, default='', max_length=2)),
                ('latitude', models.FloatField(blank=True, default=0.0)),
                ('longitude', models.FloatField(blank=True, default=0.0)),
                ('looking_for_teammate', models.BooleanField(default=True, help_text='Select if you are actively looking for new teammates. Only then will you receive messages from prospective team members.')),
                ('prospective_teammate_profile', models.CharField(blank=True, help_text='Optional description of the profile of prospective teammates.', max_length=200, null=True)),
                ('looking_to_mentor_another_team', models.BooleanField(default=False, help_text='Select if you are interested in mentoring another team. Only then will you receive messages from prospective teams.')),
                ('prospective_team_profile', models.CharField(blank=True, help_text='Optional description of the profile of prospective teams that you are interested in mentoring.', max_length=200, null=True)),
                ('looking_for_mentorship', models.BooleanField(default=False, help_text='Select if you are interested being mentored by another team. Only then will you receive message from prospective expert teams.')),
                ('help_request', models.CharField(blank=True, help_text='Optional description of the expertise you would like to get help with.', max_length=200, null=True)),
            ],
        ),
    ]
